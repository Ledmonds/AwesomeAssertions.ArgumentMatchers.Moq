# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  buildConfiguration: 'Release'
  vmImage: 'ubuntu-latest'

variables:
  sonarQubeProject: 'FluentAssertions.ArgumentMatchers.Moq'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 2.2.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: "NuGet Restore"
  inputs:
    command: restore
    projects: '**/*.csproj'

#- task: SonarQubePrepare@4
#  inputs:
#    SonarQube: 'SonarQube'
#    scannerMode: 'MSBuild'
#    projectKey: '$(sonarQubeProject)'
#    projectName: '$(sonarQubeProject)'
#    extraProperties: |
#      sonar.login=$(SonarQubeUserName)
#      sonar.password=$(SonarQubePassword)
#      sonar.cs.opencover.reportsPaths="$(Build.SourcesDirectory)/TestResults/Coverage.opencover.xml"
#    # I'm passing in the SonarQube username and password because the token doesn't seem to be send to SonarQube

- task: DotNetCoreCLI@2
  displayName: "Build Solution - $(BuildConfiguration)"
  inputs:
    command: build
    projects: '**/*.csproj'
    configuration: '$(buildConfiguration)'

#- task: DotNetCoreCLI@2
#  displayName: 'Run Tests'
#  inputs:
#    command: test
#    projects: '**/*[Tt]ests/*.csproj'
#    configuration: '$(buildConfiguration)'
#    arguments: '--logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="$(Build.SourcesDirectory)/TestResults/Coverage"'
#
#- task: SonarQubeAnalyze@4

- task: DotNetCoreCLI@2
  displayName: 'Create NuGet Package - Prerelease Version'
  inputs:
    command: pack
    versioningScheme: byBuildNumber
    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
    configuration: '$(buildConfiguration)'
    nobuild: true

#- task: DotNetCoreCLI@2
#  displayName: 'Create NuGet Package - Release Version'
#  inputs:
#    command: pack
#    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
#    configuration: '$(buildConfiguration)'
#    nobuild: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    artifactName: 'FluentAssertions.ArgumentMatchers.Moq'
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/packages'
